{"version":3,"file":"static/css/main.0b9dc7cd.css","mappings":"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","sources":["pages/Home/styles.sass","global/colors.sass","../node_modules/rfs/scss.scss","pages/Portfolio/styles.sass","components/CardSlider/styles.sass","components/SideBar/styles.sass","index.sass"],"sourcesContent":["@import '../../global/colors'\r\n@import '~rfs/sass'\r\n    \r\n.contents\r\n    color: $font-color\r\n    position: relative\r\n    width: 100%\r\n    height: 100%\r\n    background-color: inherit\r\n    text-align: center\r\n    display: flex\r\n    flex-direction: column\r\n    align-items: center\r\n    justify-content: center\r\n\r\n    .top\r\n        width: 80%\r\n        margin-top: 1%\r\n        height: 50%\r\n        display: flex\r\n        flex-direction: column\r\n        align-items: center\r\n        justify-content: center\r\n\r\n        .texts\r\n            font-weight: 100\r\n            width: 100%\r\n            height: auto\r\n            display: flex\r\n            flex-direction: column\r\n            align-items: center\r\n            justify-content: center\r\n\r\n            p, div:nth-of-type(1)\r\n                width: 100%\r\n                +rfs(38px)\r\n                margin-top: 1%\r\n\r\n        button\r\n            margin-top: 2%\r\n            min-width: 20%\r\n            cursor: pointer\r\n            padding: 2%\r\n            +rfs(20px)\r\n            font-weight: 200\r\n            background: inherit\r\n            transition: all 0.5s\r\n            border: solid #ffffff25 0.8px\r\n            border-radius: 25px\r\n            color: $font-color\r\n            display: flex\r\n            flex-direction: column\r\n            align-items: center\r\n            gap: 1.5vh\r\n\r\n            *\r\n                +rfs(24px)\r\n                \r\n            &:hover\r\n                border: none\r\n                +rfs(24px)\r\n                background: $transparent-grey\r\n\r\n                *\r\n                    +rfs(28px)\r\n                    \r\n    .bottom\r\n        height: 50%\r\n        width: auto\r\n        margin-top: auto\r\n        display: flex\r\n        align-items: flex-end\r\n\r\n        img\r\n            max-height: 100%\r\n            max-width: 100%\r\n            object-fit: cover\r\n            object-position: 0 1vh\r\n        \r\n@media (max-width: 568px)\r\n    .contents\r\n        .top\r\n            justify-content: end\r\n            margin-bottom: 1%\r\n\r\n            .texts\r\n                p\r\n                    strong\r\n                        display: inline-block\r\n                \r\n        button\r\n            margin-top: 5% !important\r\n            padding: 5% !important\r\n\r\n@keyframes blink\r\n    0%\r\n        opacity: 1\r\n    50%\r\n        opacity: 0.5\r\n    100%\r\n        opacity: 0","$background-color: #101010\r\n$font-color: #ffffff\r\n$transparent-grey: #4949499c","// stylelint-disable scss/dimension-no-non-numeric-values\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query () {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query () {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + \" \" + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      } @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \" \" + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \" \" + $value;\n      } @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + \" calc(\" + $min-width + if($value < 0, \" - \", \" + \") + $variable-width + \")\";\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluid-val: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluid-val {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n",".portfolio\r\n    width: 100%\r\n    height: 100%\r\n    display: flex\r\n    align-items: center\r\n    justify-content: center","@import \"../../global/colors\"\r\n@import '~rfs/sass'\r\n\r\n.slider-deck\r\n    position: relative\r\n    width: 100%\r\n    height: 90%\r\n    background-color: inherit\r\n    display: flex\r\n    align-items: center\r\n\r\n    .controls\r\n        position: absolute\r\n        display: flex\r\n        flex-wrap: nowrap\r\n        justify-content: space-between\r\n        gap: 1vw\r\n        align-items: center\r\n        bottom: 0\r\n        right: 3vw\r\n\r\n        button\r\n            cursor: pointer\r\n            color: $font-color\r\n            width: 3vw\r\n            height: 3vw\r\n            background-color: inherit\r\n            border: solid .1px $transparent-grey\r\n            padding: 0\r\n            border-radius: 100%\r\n            transition: all .5s\r\n            text-align: center\r\n            display: flex\r\n            align-items: center\r\n            justify-content: center\r\n             \r\n            * \r\n                margin: 0\r\n                padding: 0\r\n                width: 50%\r\n                height: 50%\r\n                \r\n            &:hover\r\n                border: none\r\n                color: $font-color\r\n                background-color: $transparent-grey\r\n\r\n            &:disabled\r\n                cursor: not-allowed\r\n                background: inherit\r\n                color: $transparent-grey\r\n                border: solid .1px $transparent-grey\r\n                    \r\n        span\r\n            color: $font-color\r\n            font-weight: 200\r\n            +rfs(46px)\r\n\r\n    span\r\n        &:last-child\r\n            position: absolute\r\n            bottom: -3vw\r\n            left: 50%\r\n            transform: translateX(-50%)\r\n            color: $font-color\r\n            +rfs(50px)\r\n            \r\n\r\n    .card\r\n        position: absolute\r\n        width: 75vw\r\n        height: 75vh\r\n        overflow: hidden\r\n\r\n        button\r\n            &:nth-of-type(1)\r\n                position: absolute\r\n                z-index: 2\r\n                color: $font-color\r\n                background: $background-color\r\n                border: none\r\n                border-radius: 25px\r\n                padding: .5% 2% .5% 2%\r\n                margin: 0\r\n                right: 1vw\r\n                bottom: 1.5vh\r\n                +rfs(26px)\r\n                font-weight: 300\r\n                display: flex\r\n                align-items: center\r\n\r\n                *\r\n                    &:nth-child(1)\r\n                        margin-left: 5px\r\n                        +rfs(22px)\r\n\r\n                &:hover\r\n                    cursor: pointer\r\n                    background: $font-color\r\n                    color: $background-color\r\n                    transition: background 1s\r\n\r\n        img\r\n            width: 100%\r\n            height: 100%\r\n            object-fit: cover\r\n            position: absolute\r\n            top: 0\r\n            left: 0\r\n            opacity: 0\r\n\r\n        .active\r\n            transition: opacity 1.5s\r\n            opacity: .7\r\n        \r\n        .inactive\r\n            transition: opacity 0.5s\r\n            opacity: 0\r\n\r\n        div\r\n            color: $font-color\r\n            transition: all 1s\r\n\r\n            *\r\n                &:nth-child(1)\r\n                    transition: all 1s\r\n\r\n        .opened\r\n            color: $font-color\r\n            position: absolute\r\n            width: 100%\r\n            height: 100%\r\n            background: rgba($background-color, 0.7)\r\n            display: flex\r\n            flex-direction: column\r\n            align-items: center\r\n            justify-content: flex-start\r\n\r\n            *\r\n                &:nth-child(1)\r\n                    position: absolute\r\n                    padding: 0\r\n                    margin: 0\r\n                    left: 50%\r\n                    +rfs(42px)\r\n                    transform: translate(-25%, -400%)\r\n                    background-clip: content-box\r\n\r\n        .closed\r\n            color: $font-color\r\n            border-top-right-radius: 14px\r\n            font-weight: 300\r\n            position: absolute\r\n            bottom: 0\r\n            left: 0\r\n            padding: .5% 2% 0% 3%\r\n            background: rgba($background-color, 0.2)\r\n\r\n            p\r\n                &:nth-of-type(1)\r\n                    +rfs(48px)\r\n\r\n            *\r\n                &:nth-child(n+2)\r\n                    display: none\r\n                    ","@import '../../global/colors'\r\n@import '~rfs/sass'\r\n\r\n.nav-link\r\n    text-decoration: none\r\n    color: $font-color\r\n\r\n.dsktp-top\r\n    background: inherit\r\n    margin: 0\r\n    padding: 1vw 1vw 0 1vw\r\n    position: absolute\r\n    left: 50%\r\n    transform: translateX(-50%)\r\n    top: 2%\r\n    height: 3vw\r\n    width: 10%\r\n    z-index: 3\r\n    display: flex\r\n    flex-direction: row\r\n    gap: 1.5vh\r\n    border-top: solid $font-color 0.8px\r\n    justify-content: center\r\n\r\n    .nav-link\r\n        width: 25px\r\n        height: 25px\r\n        text-align: center\r\n        padding: 4%\r\n        border-radius: 100%\r\n        margin: 0\r\n        background-color: $transparent-grey\r\n        background-clip: padding-box\r\n        border: none\r\n        cursor: pointer\r\n        display: flex\r\n        align-items: center\r\n        justify-content: center\r\n        flex-wrap: nowrap\r\n\r\n        *   \r\n            &:first-child\r\n                +rfs(20px)\r\n                max-width: 20px\r\n                max-height: 20px\r\n\r\n        span\r\n            width: 0\r\n            margin: 0\r\n            padding: 0\r\n            +rfs(18px)\r\n            visibility: hidden\r\n            opacity: 0\r\n            transition: opacity 0.8s ease-in-out\r\n\r\n        &:hover\r\n            position: relative\r\n\r\n            span\r\n                width: auto\r\n                visibility: visible\r\n                opacity: 1\r\n\r\n                position: absolute\r\n                top: calc(100% + 15px)\r\n                left: 50%\r\n                transform: translateX(-50%)\r\n                background-color: $transparent-grey\r\n                padding: 3% 30% 3% 30%\r\n                border-radius: 10px\r\n\r\n                &::before\r\n                    content: ''\r\n                    position: absolute\r\n                    top: -8px\r\n                    left: 50%\r\n                    transform: translateX(-50%)\r\n                    width: 0\r\n                    height: 0\r\n                    border-left: 8px solid transparent\r\n                    border-right: 8px solid transparent\r\n                    border-bottom: 8px solid $transparent-grey\r\n                    clear: both\r\n                    \r\n\r\n.dsktp-left\r\n    background: inherit\r\n    margin: 0\r\n    padding: 1vh 0 1vh 1vw\r\n    position: absolute\r\n    left: 1%\r\n    top: 50%\r\n    transform: translateY(-50%)\r\n    width: 10%\r\n    height: auto\r\n    z-index: 3\r\n    display: flex\r\n    flex-direction: column\r\n    gap: 1.5vh\r\n    border-left: solid $font-color 0.8px\r\n\r\n    .nav-link\r\n        width: 25px\r\n        height: 25px\r\n        text-align: center\r\n        padding: 4%\r\n        border-radius: 100%\r\n        margin: 0\r\n        white-space: nowrap\r\n        background-color: $transparent-grey\r\n        background-clip: padding-box\r\n        border: none\r\n        cursor: pointer\r\n        display: flex\r\n        align-items: center\r\n        justify-content: center\r\n        flex-wrap: nowrap\r\n\r\n        *   \r\n            &:first-child\r\n                +rfs(20px)\r\n                max-width: 20px\r\n                max-height: 20px\r\n\r\n        span\r\n            width: 0\r\n            margin: 0\r\n            padding: 0\r\n            +rfs(18px)\r\n            visibility: hidden\r\n            opacity: 0\r\n            transition: opacity 0.8s ease-in-out\r\n\r\n        &:hover\r\n            justify-content: flex-start\r\n            width: 100%\r\n            padding: 4% 14% 4% 6%\r\n            border-right: solid $font-color 0.2px\r\n            border-radius: 0\r\n            border-top-left-radius: 25px\r\n            border-bottom-left-radius: 25px\r\n            text-align: left\r\n            transition: width 0.5s\r\n\r\n            *   \r\n                &:first-child\r\n                    margin-right: 10%\r\n\r\n            span\r\n                width: auto\r\n                visibility: visible\r\n                opacity: 1\r\n\r\n.collapse-mobile\r\n    padding: 0\r\n    margin: 0\r\n    border: none\r\n    background-color: $transparent-grey\r\n    color: $font-color\r\n    position: absolute\r\n    z-index: 2\r\n    top: 2vh\r\n    left: 3vw\r\n    width: 10vw\r\n    height: 10vw\r\n    +rfs(20px)\r\n\r\n\r\n.mobile\r\n    background-color: $transparent-grey\r\n    width: 100%\r\n    height: 100%\r\n    position: absolute\r\n    z-index: 5\r\n\r\n    aside\r\n        position: absolute\r\n        z-index: 6\r\n        height: 100%\r\n        width: 70vw\r\n        background-color: rgba(0, 0, 0, 0.8)\r\n        display: flex\r\n        flex-direction: column\r\n        justify-content: center\r\n        align-items: center\r\n        text-align: center\r\n        gap: 2%\r\n\r\n        .nav-link\r\n            width: 100%\r\n            display: flex\r\n            flex-wrap: nowrap\r\n            align-items: center\r\n            justify-content: flex-start\r\n            text-align: left\r\n            padding: 0\r\n            box-sizing: border-box\r\n            margin: 0\r\n            +rfs(20px)\r\n\r\n            *\r\n                &:first-child\r\n                    +rfs(22px)\r\n                    margin-left: 5%\r\n                    margin-right: 5%\r\n\r\n            &:nth-of-type(2n)\r\n                justify-content: flex-end\r\n                text-align: right\r\n\r\n                *   \r\n                    margin-right: 5%\r\n\r\n                    &:first-child\r\n                        margin-left: 0\r\n\r\n        hr\r\n            width: 80%\r\n            margin-left: 0\r\n            margin-right: auto\r\n            \r\n            &:nth-last-of-type(2n)\r\n                margin-right: 0\r\n                margin-left: auto\r\n\r\n","@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200&display=swap')\r\n@import './global/colors'\r\n\r\n*\r\n    font-family: 'Poppins'\r\n\r\n    // Desativando seleção de textos\r\n    -webkit-touch-callout: none\r\n    -webkit-user-select: none\r\n    -khtml-user-select: none\r\n    -moz-user-select: none\r\n    -ms-user-select: none\r\n    user-select: none\r\n\r\n    // Desativando drag em imagens\r\n    -webkit-user-drag: none\r\n    -khtml-user-drag: none\r\n    -moz-user-drag: none\r\n    -o-user-drag: none\r\n    user-drag: none\r\n    \r\nhtml, body, #root\r\n    width: 100vw\r\n    height: 100vh\r\n    margin: 0\r\n    padding: 0\r\n    overflow: hidden\r\n\r\nbody\r\n    background-color: $background-color\r\n\r\nmain\r\n    position: relative\r\n    width: 100%\r\n    height: 100%\r\n\r\n    *\r\n        padding: 0\r\n        margin: 0"],"names":[],"sourceRoot":""}